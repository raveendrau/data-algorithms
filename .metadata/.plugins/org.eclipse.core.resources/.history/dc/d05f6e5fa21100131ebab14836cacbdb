public class CirclesCountry { 
	
	/**
	 * Return true if (px,py) is inside circle x,y,r
	 * @return
	 */
	public boolean isInside(int x, int y, int r, int px, int py){
		double distance = Math.sqrt((px-x)*(px-x) + (py-y)*(py-y));
		return distance < r;
//		if (distance < r) return true;
//		return false;
	}
	
	public boolean areYouInsideCircle(int x, int y, int r, int nx, int ny){
		double pythagroean = Math.sqrt((nx-x)*(nx-x) + (ny-y)*(ny-y));
		if (pythagorean < r){
			return true
	}
	
	/* 
	 * You will need to check for each circle in your CirclesCountry. Write the code to increment through each circle country. 
	 */
	
	int p1 = 0;
	for (int i=0; i<x.length; i++){
		System.out.println("Iterator is:" + i);
	}
	
	
	public int leastBorders(int[] x, int[] y, int[] r, 
					        int x1, int y1, int x2, int y2) {	
		int p1 = 0;
		for(int k=0; k < x.length; k++){
			boolean b1 = isInside(x[k],y[k],r[k],x1,y1);
			boolean b2 = isInside(x[k],y[k],r[k],x2,y2);
			if (b1 != b2){
				p1++;
			}
		}		
		return p1;
		}
	}
